class Solution {
public:
     void dfs(vector<vector<int>>& image,int i,int j,int newCol,int colour)
    {
        if(i<0 or i>=image.size() or j<0 or j>=image[0].size()) return;
        if(image[i][j]==colour and image[i][j]!=newCol) 
        {
            image[i][j]=newCol;
            dfs(image,i+1,j,newCol,colour);
            dfs(image,i-1,j,newCol,colour);
            dfs(image,i,j+1,newCol,colour);
            dfs(image,i,j-1,newCol,colour);
        }
        return;
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int n=image.size(),m=image[0].size();
        if(n==0) return image;
        dfs(image,sr,sc,newColor,image[sr][sc]);
        return image;
    }
};
